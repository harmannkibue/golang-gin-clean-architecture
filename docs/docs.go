// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/mratiba/standing-orders": {
            "post": {
                "description": "Create M-Pesa Ratiba standing order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mpesa Ratiba"
                ],
                "summary": "Create M-Pesa Ratiba standing order",
                "operationId": "Create M-Pesa Ratiba standing order",
                "parameters": [
                    {
                        "description": "Create Mpesa Ratiba standing order for subscription management",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/intfaces.MpesaRatibaRequestBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/intfaces.MpesaRatibaRequestResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httputil.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "intfaces.MpesaRatibaRequestBody": {
            "type": "object",
            "properties": {
                "AccountReference": {
                    "type": "string"
                },
                "Amount": {
                    "type": "string"
                },
                "BusinessShortCode": {
                    "type": "string"
                },
                "CallBackURL": {
                    "type": "string"
                },
                "EndDate": {
                    "type": "string"
                },
                "Frequency": {
                    "type": "string"
                },
                "PartyA": {
                    "type": "string"
                },
                "ReceiverPartyIdentifierType": {
                    "type": "string"
                },
                "StandingOrderName": {
                    "type": "string"
                },
                "StartDate": {
                    "type": "string"
                },
                "TransactionDesc": {
                    "type": "string"
                },
                "TransactionType": {
                    "type": "string"
                }
            }
        },
        "intfaces.MpesaRatibaRequestResponseBody": {
            "type": "object",
            "properties": {
                "ResponseBody": {
                    "type": "object",
                    "properties": {
                        "responseCode": {
                            "type": "string"
                        },
                        "responseDescription": {
                            "type": "string"
                        }
                    }
                },
                "ResponseHeader": {
                    "type": "object",
                    "properties": {
                        "responseCode": {
                            "type": "string"
                        },
                        "responseDescription": {
                            "type": "string"
                        },
                        "responseRefID": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Spectacular SAS Billing.",
	Description:      "Spectacular Billing Golang Payment Services Connector Clean Architecture using Uncle Bob's clean architecture principles.\nIt serves as Blog.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
